name: CI

on:
  push:
    branches:
      - main
    tags:
      - 'v*'
  pull_request:
    branches:
      - main

jobs:
  build:
    strategy:
      matrix:
        os: [macos-latest, windows-latest]
        build_type: [Release]
    runs-on: ${{ matrix.os }}

    steps:
    - name: Checkout source
      uses: actions/checkout@v4

    - name: Install dependencies (macOS)
      if: runner.os == 'macOS'
      run: |
        brew update
        brew install cmake raylib

    - name: Install dependencies (Windows)
      if: runner.os == 'Windows'
      uses: lukka/run-vcpkg@v11
      with:
        vcpkgCommands: |
          bootstrap
          install raylib:x64-windows-static

    - name: Setup CMake
      uses: lukka/get-cmake@latest

    - name: Configure & generate
      run: |
        mkdir -p build
        cmake -B build -S . \
          -DCMAKE_BUILD_TYPE=${{ matrix.build_type }} \
          ${{ runner.os == 'Windows' && '-DCMAKE_TOOLCHAIN_FILE=${{ github.workspace }}/vcpkg/scripts/buildsystems/vcpkg.cmake' || '' }}

    - name: Build
      run: cmake --build build --config ${{ matrix.build_type }} --parallel

    - name: Package
      run: |
        cd build/${{ matrix.build_type }}
        if [ "${{ runner.os }}" == "macOS" ]; then
          strip evogrid
        fi
        zip -r EvoGrid-${{ matrix.os }}.zip evogrid*

    - name: Upload artifact
      uses: actions/upload-artifact@v4
      with:
        name: EvoGrid-${{ matrix.os }}-v${{ github.ref_name }}
        path: build/${{ matrix.build_type }}/EvoGrid-${{ matrix.os }}.zip